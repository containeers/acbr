name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'

      - name: Run tests
        run: go test -v ./...

  release:
    needs: test  # Wait for tests to pass
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'

      - name: Build for multiple platforms
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          
          # Build with version info
          FLAGS="-X main.Version=$VERSION"
          
          mkdir -p dist/{linux,darwin-amd64,darwin-arm64,windows}
          
          GOOS=linux GOARCH=amd64 go build -ldflags "$FLAGS" -o dist/linux/acbr
          GOOS=darwin GOARCH=amd64 go build -ldflags "$FLAGS" -o dist/darwin-amd64/acbr
          GOOS=darwin GOARCH=arm64 go build -ldflags "$FLAGS" -o dist/darwin-arm64/acbr
          GOOS=windows GOARCH=amd64 go build -ldflags "$FLAGS" -o dist/windows/acbr.exe
          
          # Create archives
          cd dist
          tar czf acbr-linux-amd64.tar.gz linux/acbr
          tar czf acbr-darwin-amd64.tar.gz darwin-amd64/acbr
          tar czf acbr-darwin-arm64.tar.gz darwin-arm64/acbr
          zip acbr-windows-amd64.zip windows/acbr.exe

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/acbr-linux-amd64.tar.gz
            dist/acbr-darwin-amd64.tar.gz
            dist/acbr-darwin-arm64.tar.gz
            dist/acbr-windows-amd64.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 